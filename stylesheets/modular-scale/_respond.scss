// Stripping units is rarely a best practice and this function
// should not be used elsewhere
@function ms-unitless($val) {
  $val: $val / ($val - $val + 1);
  @return $val;
}

// font-size: 1em;
// @media (min-width: 40em) {
//   font-size: calc( 1em + #{2 - 1} * ( (100vw - 40em) / #{50 - 40} ));
// }
// @media (min-width: 50em) {
//   font-size: 2em;
// }

@mixin ms-respond($property, $value, $range: $ms-range, $base: $ms-base) {
  @if $ms-range == null {
    #{$property}: ms($value,$base,$ms-ratio);
  } @else {

    font-size: ms($value,$base,nth(nth($range,1),1));
    @media (min-width: nth(nth($range,1),2)) {
      font-size: calc( #{ms($value,$base,nth(nth($range,1),1))} + #{ms-unitless(ms($value,$base,nth(nth($range,2),1))) - ms-unitless(ms($value,$base,nth(nth($range,1),1)))} * ( (100vw - #{nth(nth($range,1),2)}) / #{ms-unitless(nth(nth($range,2),2)) - ms-unitless(nth(nth($range,1),2))} ));
    }
    @media (min-width: nth(nth($range,2),2)) {
      font-size: ms($value,$base,nth(nth($range,2),1));
    }
  }
}